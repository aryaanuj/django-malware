'use strict';

// loading bar
var Nanobar = function() {
  var c, d, e, f, g, h, k = {
      width: "100%",
      height: "5px",
      zIndex: 9999,
      top: "0"
    },
    l = {
      width: 0,
      height: "100%",
      clear: "both",
      transition: "height .3s"
    };
  c = function(a, b) {
    for (var c in b) a.style[c] = b[c];
    a.style["float"] = "left"
  };
  f = function() {
    var a = this,
      b = this.width - this.here;
    0.1 > b && -0.1 < b ? (g.call(this, this.here), this.moving = !1, 100 == this.width && (this.el.style.height = 0, setTimeout(function() {
      a.cont.el.removeChild(a.el)
    }, 100))) : (g.call(this, this.width - b / 4), setTimeout(function() {
      a.go()
    }, 16))
  };
  g = function(a) {
    this.width =
      a;
    this.el.style.width = this.width + "%"
  };
  h = function() {
    var a = new d(this);
    this.bars.unshift(a)
  };
  d = function(a) {
    this.el = document.createElement("div");
    this.el.style.backgroundColor = a.opts.bg;
    this.here = this.width = 0;
    this.moving = !1;
    this.cont = a;
    c(this.el, l);
    a.el.appendChild(this.el)
  };
  d.prototype.go = function(a) {
    a ? (this.here = a, this.moving || (this.moving = !0, f.call(this))) : this.moving && f.call(this)
  };
  e = function(a) {
    a = this.opts = a || {};
    var b;
    a.bg = a.bg || "red";
    this.bars = [];
    b = this.el = document.createElement("div");
    c(this.el,
      k);
    a.id && (b.id = a.id);
    b.style.position = a.target ? "relative" : "fixed";
    a.target ? a.target.insertBefore(b, a.target.firstChild) : document.getElementsByTagName("body")[0].appendChild(b);
    h.call(this)
  };
  e.prototype.go = function(a) {
    this.bars[0].go(a);
    100 == a && h.call(this)
  };
  return e
}();
var nanobar = new Nanobar();
nanobar.go(30);
nanobar.go(60);
nanobar.go(100);

// full screen
var elem = document.documentElement;

function openFullscreen() {
  const fc_btn = document.getElementById('fullscreen');
  const iconClass = fc_btn.getAttribute('class');
  if (iconClass == "fa fa-expand") {
    if (elem.requestFullscreen) {
      elem.requestFullscreen();
      fc_btn.setAttribute('class', 'fa fa-compress');
    } else if (elem.webkitRequestFullscreen) {
      /* Safari */
      elem.webkitRequestFullscreen();
      fc_btn.setAttribute('class', 'fa fa-compress');
    } else if (elem.msRequestFullscreen) {
      /* IE11 */
      elem.msRequestFullscreen();
      fc_btn.setAttribute('class', 'fa fa-compress');
    }
  } else {
    if (document.exitFullscreen) {
      document.exitFullscreen();
      fc_btn.setAttribute('class', 'fa fa-expand');
    } else if (document.webkitExitFullscreen) {
      /* Safari */
      document.webkitExitFullscreen();
      fc_btn.setAttribute('class', 'fa fa-expand');
    } else if (document.msExitFullscreen) {
      /* IE11 */
      document.msExitFullscreen();
      fc_btn.setAttribute('class', 'fa fa-expand');
    }
  }
}

// form validation
(function() {
  window.addEventListener('load', function() {
    var forms = document.getElementsByClassName('needs-validation');
    var validation = Array.prototype.filter.call(forms, function(form) {
      form.addEventListener('submit', function(event) {
        if (form.checkValidity() === false) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      }, false);
    });
  }, false);
})();

//password confirmation checking
$(document).ready(function() {
  $("#con_password").keyup(function() {
    var pass = $("#password").val();
    var cnf_pass = $(this).val();
    if (pass != "" && cnf_pass != "") {
      if (pass == cnf_pass) {
        $("#cnf-msg").html("<p class='text-success'>Password Matched</p>");
      } else {
        $("#cnf-msg").html("<p class='text-danger'>Password Not Matched</p>");
      }
    }
  });

  //##################### index ###########################

  $("#report_link").click(function() {
    $("#report_link").attr("href", "/home/report/" + $("#report_val").val());
  });
  // report search link
  $("#report_val").keyup(function() {
    $("#report_link").attr("href", "/home/report/" + $(this).val());
  });

  // datatable
  $("#example").DataTable();

  // tabs
  var tabs = $('.tabs');
  var selector = $('.tabs').find('a').length;
  var activeItem = tabs.find('.active1');
  var activeWidth = activeItem.innerWidth();
  $(".selector").css({
    "left": activeItem.position.left + "px",
    "width": activeWidth + "px"
  });
  $(".tabs").on("click", "a", function(e) {
    e.preventDefault();
    $('.tabs a').removeClass("active1");
    $(this).addClass('active1');
    var activeWidth = $(this).innerWidth();
    var itemPos = $(this).position();
    $(".selector").css({
      "left": itemPos.left + "px",
      "width": activeWidth + "px"
    });
  });
});

