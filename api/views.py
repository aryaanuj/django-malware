from django.shortcuts import render, HttpResponse
from rest_framework.filters import SearchFilter, OrderingFilter
from django_filters.rest_framework import DjangoFilterBackend
from .customlimitoffset import customlimitoffset
from .models import Server, AnalyzedData, AnalyzedFieldView
from .serializers import ServerSerializer, AnalyzedDataSerializer, AnalyzedFieldViewSerializer
from rest_framework import viewsets
from rest_framework.parsers import MultiPartParser, FormParser
from rest_framework.response import Response
from rest_framework_simplejwt.authentication import JWTAuthentication
from rest_framework.permissions import IsAuthenticated

class ServerViewSet(viewsets.ModelViewSet):
	queryset = Server.objects.all()
	serializer_class = ServerSerializer
	authentication_classes = [JWTAuthentication]
	permission_classes = [IsAuthenticated]

class AnalyzedFieldViewViewSet(viewsets.ModelViewSet):
	queryset = AnalyzedFieldView.objects.all()
	serializer_class = AnalyzedFieldViewSerializer
	authentication_classes = [JWTAuthentication]
	permission_classes = [IsAuthenticated]


class AnalyzedDataViewSet(viewsets.ModelViewSet):
	parser_classes = [MultiPartParser,FormParser]
	queryset = AnalyzedData.objects.all()
	serializer_class = AnalyzedDataSerializer
	authentication_classes = [JWTAuthentication]
	permission_classes = [IsAuthenticated]
	filter_backends = [SearchFilter, OrderingFilter,DjangoFilterBackend]
	search_fields = ['^filename', '^md5', '^sha1', '^sha256']
	filterset_fields = ['user', 'status']
	ordering_fields = ['id','filename','md5','sha1','sha256']
	pagination_class = customlimitoffset
	def update(self, request, *args, **kwargs):
		kwargs['partial'] = True
		return super().update(request, *args, **kwargs)
	def post(self, request, *args, **kwargs):
		analyzeSerializer = AnalyzedDataSerializer(data=request.data)
		if analyzeSerializer.is_valid():
			analyzeSerializer.save()
			return Response(analyzeSerializer.data, status=status.HTTP_201_CREATED)
		else:
			return Response(analyzeSerializer.errors, status=status.HTTP_400_BAD_REQUEST)


